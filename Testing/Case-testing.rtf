Тест-кейс 1: Проверка автоизменения приложением данных при заполнении формы

Тест-кейс 1.1: Проверка автокоррекции введенных данных при типе маршрута «В обе стороны»
1.	Зайти на сайт https://aviabilet.kz/
2.	Выберите тип маршрута «В обе стороны»
3.	В первой строке ввести города в полях (Откуда? и Куда?; Например: Минск -> Москва)
4.	Во второй строке изменить город в первом поле (Например: Москва на Берлин)
5.	Во второй строке изменить город во втором столе (Например:  Минск на Лондон)
Ожидаемый результат: Приложение должно изменить соответственно города в полях в первой строчке на измененные во второй. 

	Тест-кейс 1.2: Проверка автокоррекции типа маршрута на тип «Сложный маршрут»
1.	Зайти на сайт https://aviabilet.kz/
2.	Добавьте маршрут 
Ожидаемый результат: приложение должно изменить тип маршрута на «Сложный маршрут»

	Тест-кейс 1.3: Проверка автокоррекции типа маршрута на тип «В одну сторону»
1.	Зайти на сайт https://aviabilet.kz/
2.	Удалите маршрут
Ожидаемый результат: приложение должно изменить тип маршрута на «В одну сторону»

Тест-кейс 1.4: Проверка сохранения введенных данных при типе маршрута «Сложный маршрут»
1.	Зайти на сайт https://aviabilet.kz/
2.	Введите в первую строку города маршрута (Откуда? и Куда?)
3.	Изменить тип маршрута на «Сложный маршрут» 
4.	Введите во вторую строчку города, отличные от городов первой строчки
Ожидаемый результат: Города в первой и второй строчке формы должны быть отличны друг от друга (приложение не применяет коррекцию введенных данных, как при типе маршрута «В обе стороны

	Тест-кейс 1.5: Проверка ввода даты отправления и возвращения
1.	Зайти на сайт https://aviabilet.kz/
2.	Кликните на календарь
3.	Выберите дату отправления
4.	Выберите дату возвращения
5.	Попытайтесь изменить дату возвращение на дату, предшествующую отправлению
Ожидаемый результат: Приложение должно запретить пользователю выбрать дату возвращения, которая будет раньше даты отправления

	Тест-кейс 1.6: Рассмотрение проверки приложением перелета в тот же город
1.	Зайти на сайт https://aviabilet.kz/
2.	Выберите тип маршрута «В одну сторону»
3.	Введите одинаковые города в оба поля формы
Ожидаемый результат: Приложение не должно позволить пользователю продолжить свои действия и начать поиск билетов. Приложение должно вывести сообщение, что пользователь обязан ввести все данные корректно

Тест-кейс №2: Проверка корректного перевода приложения на английский язык
1.	Зайти на сайт https://aviabilet.kz/
2.	Выберите английский язык в правом верхнем углу окна приложения
3.	Введите данные маршрута в формы
4.	Нажмите на кнопку «Find tickets»
5.	Забронируйте билет («book»)
Ожидаемый результат: Все информационные сообщения приложения и текст должны быть на английском языке
Найденные баги: некоторые элементы приложения остаются без перевода (на русском языке)

Тест-кейс №3: Проверка 
1.	Зайти на сайт https://aviabilet.kz/
2.	Выберите пункт «Страховка» на форме
3.	Введите все поля в форме
4.	Выберите размер страховой суммы
5.	Кликните по кнопке «Рассчитать стоимость»
6.	Выберите минимальный размер  страховой суммы
7.	Кликните по кнопке «Рассчитать стоимость»
8.	Выберите максимальный размер страховой суммы
9.	Кликните по кнопке «Рассчитать стоимость»
Ожидаемый результат: Приложение должно изменять размер стоимости полиса в соответствии с выбранной страховой суммой (чем выше страховая сумма, тем выше стоимость)

Тест-кейс №4: Рассмотрение корректной проверки регистрации пользователя
1.	Зайти на сайт https://aviabilet.kz/
2.	Заполните поля формы
3.	Нажмите на кнопку «Найти билеты»
4.	Забронируйте билет
5.	Введите требуемые поля на форме регистрации, пропустив 1-2 обязательных поля
6.	Нажмите на кнопку «Забронировать»
Ожидаемый результат: Приложение должно выделить все незаполненные поля на форме регистрации. Не заполнив корректно форму регистрации, пользователь не должен иметь возможности забронировать билет

Тест-кейс №5: Проверка коррекции приложением кода страны
1.		Зайти на сайт https://aviabilet.kz/
2.	Заполните поля формы
3.	Нажмите на кнопку «Найти билеты»
4.	Забронируйте билет
5.	Введите требуемые поля на форме регистрации, пропустив 1-2 обязательных поля
6.	Измените код страны 
Ожидаемый результат: Приложение должно изменить страну на соответствующую введенному коду страны (например: +375 = Беларусь)
